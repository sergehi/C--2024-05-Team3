### Клиент
1. React
2. Node.js
3. Typescript
4. NextUI
5. Auth.js
6. Redux
7. SignalR
8. TailwindCSS
9. Https

### Сервер
1. SignalR
2. RabbitMQ
3. Postgres
4. Linq
5. EFCore
6. AutoMapper
7. GRPc
8. Https
9. UserSecrets
10. PasswordHasher
11. JWT
12. Kestrel
13. Cors
14. WebApi
15. Swagger
16. net9.0
17. Оптимистичное (версионность записей) и писсимисточное (транзакции) использование блокировок
18. Модульные тесты
19. Интеграционные тесты

### Аспекты
1. Асинхронность
2. //Нужно написать что-то про: Многопоточность (примитивы синхронизации)
3. //Нужно написать что-то про: Шаблоны проектирования (3+)

### Задачи до 18.11
1. SignalR реализовать на Gateway - Важно - Сергей
2. Отладить (может дописать) RabbitMQ на всех микросервисах - Важно - Виктор
3. Дописать клиента - Не важно - Данил
4. Презентация + выступление - Важно - Данил (Сценарий, демонстрация), Сергей (материал)
5. Многопоточность (примитивы синхронизации) - Важно - Виктор
6. Шаблоны проектирования (3+) - Не важно - Шамс
7. Отладка работы всех микросевисов, клиента и подготовка для демонстрации - Важно - Данил
8. Создать общие настройки подключения к RabbitMQ в Common - Важно - Виктор